This example is little different from others since it demonstrate the use of wise in a web (seam) application.

This sample needs a jboss-4.x application server with wise-core.sar deployed. 
To do this just copy wise-core.sar directory in JBoss deployment directory.
This sample needs also to have HelloWorldServlet war deployed in your application server because it invokes server side WS 
gotten from this sample. We don't provide a WS dedicated to this seam sample because seam sample is generated by seam.gen 
and we don't want to modify in any manner what seam-gen has generated keeping sample easy to read and understand. 
Moreover you can easily generate this sample from scratch using seam-gen in just 5 mins experiment how much could be easy to 
generate a seam application calling a WS from scratch (see paragraph 2 of this readme for more infos about)

1. Deploy and use seam application

Just edit build.properties and type ant.
Seam application will be deployed on your application server.
Point you browser to http://localhost:8080/seamSample/helloWorldWS.seam
Click on "helloWorldWS!" button-
Have fun.

2. Generate Seam sampleusing seam-gen

This sample is generated using seam-gen. The only class we have modified is HelloWorldWSBean.
To generate the skeleton of a seam application just call seam-gen commands:
* seam setup
* seam create-project
* seam new-action

Then edit the action bean (in our case the action is called HelloWorldWS and so the bean HelloWorldWSBean) and 
implement wise there wise code to call the WS. 
